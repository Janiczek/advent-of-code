module Year2019.Day20 exposing (Input1, Input2, Output1, Output2, compute1, compute2, input_, main, parse1, parse2, tests1, tests2)

-- A bit of input preprocessing was needed to simplify the comptation (no two-letter portals)

import AStar exposing (Path)
import Advent
    exposing
        ( Test
          -- , unsafeToInt
          -- , unsafeMaybe
        )
import Char
import Dict exposing (Dict)
import Dict.Extra
import List.Extra
import Set exposing (Set)



-- 1. TYPES (what is the best representation of the problem?)


type alias Input1 =
    Maze


type alias Input2 =
    Maze


type alias Output1 =
    Int


type alias Output2 =
    Int



-- 2. PARSE (mangle the input string into the representation we decided on)


type alias Coord =
    ( Int, Int )


type alias Maze =
    { floor : Set Coord
    , portals : Dict Coord Coord
    , start : Coord
    , goal : Coord
    }


parse1 : String -> Input1
parse1 string =
    let
        -- doesn't have named portals processed yet
        rawList : List ( Coord, Char )
        rawList =
            string
                |> String.lines
                |> List.indexedMap
                    (\y line ->
                        line
                            |> String.toList
                            |> List.indexedMap (\x char -> ( ( x, y ), char ))
                    )
                |> List.concat

        floor : Set Coord
        floor =
            rawList
                |> List.filterMap
                    (\( coord, char ) ->
                        if char == '.' then
                            Just coord

                        else
                            Nothing
                    )
                |> Set.fromList

        portals : Dict Coord Coord
        portals =
            rawList
                |> List.filterMap
                    (\( coord, char ) ->
                        if Char.isAlpha char then
                            Just char

                        else
                            Nothing
                    )
                |> List.concatMap (findPortal rawList floor)
                |> Dict.fromList
    in
    { floor = floor
    , portals = portals
    , start =
        rawList
            |> List.Extra.find (Tuple.second >> (==) 'A')
            |> Advent.unsafeMaybe "start"
            |> Tuple.first
            |> (\c -> dotNextTo c floor)
    , goal =
        rawList
            |> List.Extra.find (Tuple.second >> (==) 'Z')
            |> Advent.unsafeMaybe "goal"
            |> Tuple.first
            |> (\c -> dotNextTo c floor)
    }


findPortal : List ( Coord, Char ) -> Set Coord -> Char -> List ( Coord, Coord )
findPortal rawList floor char =
    if char == 'A' || char == 'Z' then
        []

    else
        case List.filter (Tuple.second >> (==) char) rawList of
            [ ( coordA, _ ), ( coordB, _ ) ] ->
                [ ( coordA, dotNextTo coordB floor )
                , ( coordB, dotNextTo coordA floor )
                ]

            _ ->
                Debug.todo "wat findPortal"


dotNextTo : Coord -> Set Coord -> Coord
dotNextTo ( x, y ) floor =
    [ ( x - 1, y )
    , ( x + 1, y )
    , ( x, y - 1 )
    , ( x, y + 1 )
    ]
        |> List.Extra.find (\coord -> Set.member coord floor)
        |> Advent.unsafeMaybe "dot next to"


parse2 : String -> Input2
parse2 string =
    parse1 string



-- 3. COMPUTE (actually solve the problem)


compute1 : Input1 -> Output1
compute1 maze =
    let
        findPath from to =
            AStar.findPath
                (\_ _ -> 1)
                (movesFrom maze.floor maze.portals)
                from
                to
                |> Advent.unsafeMaybe "findPath"
    in
    findPath maze.start maze.goal
        |> List.length


movesFrom : Set Coord -> Dict Coord Coord -> Coord -> Set Coord
movesFrom floor portals ( x, y ) =
    let
        possibilities =
            [ ( x - 1, y )
            , ( x + 1, y )
            , ( x, y - 1 )
            , ( x, y + 1 )
            ]

        normal =
            possibilities
                |> Set.fromList
                |> Set.intersect floor

        usingPortals =
            possibilities
                |> List.filterMap (\coord -> Dict.get coord portals)
                |> Set.fromList
    in
    Set.union
        normal
        usingPortals


compute2 : Input2 -> Output2
compute2 input =
    -1



-- 4. TESTS (uh-oh, is this problem a hard one?)


tests1 : List (Test Input1 Output1)
tests1 =
    [ Test "example"
        (Advent.removeNewlinesAtEnds """
        A
 #######.#########
 #######.........#
 #######.#######.#
 #######.#######.#
 #######.#######.#
 #####  D    ###.#
D...##       ###.#
 ##.##       ###.#
 ##...B      ###.#
 #####    C  ###.#
 #########.#####.#
B..#######...###.#
 #.#########.###.#
C..#########.....#
 ###########.#####
            Z
""")
        Nothing
        23
    ]


tests2 : List (Test Input2 Output2)
tests2 =
    []



-- BOILERPLATE (shouldn't have to touch this)


input_ : String
input_ =
    """
                                          B     C       D         E     F         G                                          
 #########################################.#####.#######.#########.#####.#########.######################################### 
 #...#...#.#.........#.#.#...#.#.............#.......#.....#...#.#.....#.....#.#.................#.#.#...#...#.#...#.......# 
 #.###.###.###.#####.#.#.###.#.#.#.###.###.#.#######.#.###.#.###.###.###.###.#.#####.#.#####.#.###.#.#.###.###.#.###.###.### 
 #.............#.................#.#.....#.#.#.......#...#.#.......#.#.#.#...#.......#.....#.#.#.#.............#.#...#...#.# 
 #####.###.###.###.#.###.#.#.#.#.#######.#.#######.#####.#####.###.#.#.###.###.###.#.#.#########.#.#.#.#####.###.#.#######.# 
 #.#...#...#...#...#.#...#.#.#.#...#.....#.#.....#.#.#.......#...#...#...#.#.#...#.#.#.............#.#.....#...#.#.....#...# 
 #.#######.#####.#.###########.###.###.#######.#.#.#.###.#####.#.#####.#.#.#.###.###.#.#.#.###.#.###.###.#######.#.#######.# 
 #.#.#.#...#...#.#.#...........#...#.....#.#...#.....#.....#...#.....#.#.....#.....#.#.#.#...#.#...#.#.....#.........#.#...# 
 #.#.#.#######.#.#####.###.#.#####.###.#.#.###.###.#.#.#.#########.#.#.#######.#.#############.#####.#############.###.###.# 
 #.#.....#.....#.#.......#.#.#.#.....#.#...#.....#.#.#.#.#.#.#.#.#.#.#.......#.#.#.....#.#...#...#.#...#...#.#.......#.....# 
 #.###.#######.#######.#######.#.#####.#########.#######.#.#.#.#.#.#.#####.###.###.#####.#.###.###.#######.#.#####.###.###.# 
 #.....#...#.......#.#...#.......#...#.#.#...#.....#.............#.#.....#...#.#...#.....#...#.#.#...........#.#...#.#.#.#.# 
 #.###.###.#####.###.#####.#####.###.#.#.#.###.#####.#.#####.#######.#####.###.###.#.###.#.###.#.###.###.#####.###.#.#.#.### 
 #.#.#.#.......#...#.#...#...#.#.#.#.......#.......#.#...#.....#.....#.#.....#.........#.#...#...#.....#.#.#...#.........#.# 
 ###.#.#####.###.###.#.#######.###.#.###.#####.###.#.#.#.###########.#.#####.###.#.###.###.#####.###.#####.#.#######.#####.# 
 #...#.......#...........#.#.#.#...#.#.#.#.#...#.#.#.#.#...#.#.#.#.#.....#...#.#.#...#.#.....#.#.#.#...#.....#.....#.#.#.#.# 
 ###.#######.#####.#######.#.#.###.###.#.#.###.#.#####.#####.#.#.#.#.###.###.#.#.#########.###.###.#.#######.###.###.#.#.#.# 
 #.....#.#.....#.....#...#...................#...#.....#.........#.....#.#...#.......#.#...#...#.#.....#.#.........#.......# 
 #####.#.###.###.#.###.###.#######.###.#########.#####.#.#.###.#####.###.###.#.#######.#.#.#.###.###.#.#.###.#.#.###.#####.# 
 #.....#.#.....#.#.......#.#...#.#.#.......#.....#.#.#.#.#.#.#.#.#...#...#...#.....#...#.#.#.#.#.....#...#.#.#.#...#...#.#.# 
 #####.#.#####.###.###.#######.#.###.#####.#.#.###.#.#.#.###.###.###.#######.###.#####.#.###.#.#####.#####.#####.#.#.###.### 
 #.#.#...#...#...#.#.#.#.#.......#.#.#...#.#.#.#.....#...#.#.....#...#.#...#.#...#...............#.......#.....#.#.....#...# 
 #.#.#.#.###.#.#####.#.#.###.#####.#.#.#.#.###.###.#.#.###.###.#.#.###.#.#.#.#.#.#.#.#####.#########.#######.#######.###.### 
 #.#...#...#.#...#...#.#.#.....#.....#.#.#...#.....#.#.....#...#.#...#...#...#.#...#...#.#.....#.#...#.#...#.#.........#...# 
 #.###.#####.#.#####.#.#.#.#####.#.###.#.###.#######.#.#######.#.###.#.###.#.#.#.###.###.#######.#.###.#.#.#.#########.#.### 
 #.#...#...#.....#...#.#...#.#.#.#.#...#.....#.....#.#.......#.#.....#.#.#.#.#.#.#...#.....#.#.....#.#...#.#...#.#.#.#.#.#.# 
 #.#.###.###.#.#.#.###.###.#.#.###.###.###.###.#.###.###.###.#.#####.#.#.#########.###.#.###.###.###.#.#####.###.#.#.#.#.#.# 
 #.#...#...#.#.#.#.#.#.#.#.....#...#.....#...#.#...#...#.#...#.....#.#.....#.#.#.......#.#...#.#.#.#.#.#.#.#...#.#.........# 
 #.#.###.#######.#.#.#.#.#####.#######.###.###.###.#.#######.#####.#.###.###.#.#####.#####.###.#.#.#.#.#.#.#.#.#.#.#.#.#.### 
 #...#.....#.#...#...#.....#.....#.#.#...#.#.....#.....#.#.....#.#.#.#.#.#...#...#...........#.#...#.........#.#.#.#.#.#...# 
 #.#####.###.###.#.#.#.#######.###.#.#.#.###.###.#.#.###.###.###.#.###.#.#.#####.#.#####.#####.#.#####.###.#####.#####.##### 
 #.....#.#.....#.#.#.#.#.#.....#.......#.#...#...#.#...#.....#.........#.....#.........#.#.....#.......#.#.#.....#.#.#.....# 
 ###.###.###.###.###.#.#.###.#########.#########.#######.###########.#####.#####.#############.#.###.###.#######.#.#.#####.# 
 #.....#.#...#.....#.#.#...#.#.#.#    Y         a       H           d     c     b          #.....#.#.#.......#...#...#...#.# 
 ###.###.###.###.###.#.###.#.#.#.#                                                         #####.#.###.#.###.#.###.###.###.# 
A......#.................#...#...#                                                         #.#.......#.#.#.....#.#.......#.# 
 ###.###.###.#.#.#.#####.#.#.###.#                                                         #.#####.#########.###.###.#.###.# 
 #...#...#.#.#.#.#...#.#.#.#.#....O                                                        #.....#.....#.#.#...#.#.#.#.#.#.# 
 #.#.#.###.#.#########.#.#.#.#.###                                                         #.#.###.#####.#.#.#.#.#.###.#.#.# 
 #.#.#...#.....#.#.#...#.#.#.....#                                                        P..#.....#.#...#.#.#.#.......#....O
 #.###.###.#.###.#.#.#.#.#.#######                                                         #####.#.#.#.###.###.#.#.###.###.# 
H........#.#.#.#...#.#.#...#.#.#.#                                                         #.#...#.#.....#.......#.#.....#.# 
 #############.#.#####.#####.#.#.#                                                         #.###.#.#.###.###.#.#.###.#####.# 
 #.....#.#.#...#.......#.........#                                                         #...#.#.....#.....#.#.#.........# 
 #.###.#.#.#.#.#.#####.#.#####.###                                                         ###.###################.#####.### 
 #...#.......#...#.........#.....#                                                        L..#...................#...#.....# 
 ###.#####.###.#.###.#.#.#######.#                                                         #.#.#####.#.#.#.#####.#.#####.### 
 #.#...#...#...#...#.#.#.#...#...#                                                         #.#.#...#.#.#.#...#...#.....#.#.# 
 #.###.###.###.#.#####.###.###.###                                                         #.#.#.#####.###.###.#####.#####.# 
I........#.#.#.#.#...#.#.#...#....E                                                        #.#...#...#...#...#.#...#.#.#...# 
 ###.#######.#######.###.###.#####                                                         #.###.###.#########.#.#.###.#.### 
 #.......#...#.#.........#.......#                                                         #.......#.....#.#.#...#..........R
 #####.###.#.#.#.#.#.###.#.#####.#                                                         #.#######.#####.#.###.###.####### 
 #.#.#.#...#.....#.#...#.....#....R                                                        #...#.............#...#.....#....c
 #.#.#########.#####.###.#.#.#.#.#                                                         #.###.###.###.###.###.###.###.### 
J..#.......#.#.#.#...#.#.#.#.#.#.#                                                         #.#...#...#.....#...#.#.#.#.#...# 
 #.#.#.#####.#.#.#####.###########                                                         #####.#.###.#.#.###.#.#.###.#.### 
 #...#...........#...#.#.#.......#                                                        S..#...#.#.#.#.#.#...#.#.#.#.....# 
 #######.#.#.#####.###.#.#####.###                                                         #.###.###.#########.###.#.#.##### 
 #.#...#.#.#.#.........#.........#                                                         #.....#...#.......#.........#.#.# 
 #.#.###########.#####.#.###.###.#                                                         #########.#######.#######.#.#.#.# 
 #.....#...#.#.#.#.#.......#.#.#.#                                                         #.........#.#.#.......#.#.#.#...# 
 #.#.###.#.#.#.#.###.#######.#.#.#                                                         #.#######.#.#.#.#.#.#.#.#######.# 
K..#...#.#.#...#...#.....#.#.#...#                                                        X........#.......#.#.#.........#..P
 #####.#.#.#.#.###.#.#####.#####.#                                                         #.###.#####.###.#####.#.#.#####.# 
 #.#.#...#...#.....#...#.#.#.#.#..B                                                        #.#...#.#.....#.#.....#.#.....#.# 
 #.#.#######.###.#######.#.#.#.#.#                                                         #####.#.###.###.###########.###.# 
 #.#.....#.#...#...#.#.#.......#.#                                                         #...#...#...#...#.#.......#.....# 
 #.###.#.#.#########.#.#.###.#.###                                                         #.#######.#.###.#.#.#.#.######### 
 #.....#...#.#.#...#.#.#.#.#.#...#                                                         #.#...#...#.#...#.#.#.#...#.....# 
 #.#####.###.#.#.###.#.###.#.#.###                                                         #.###.#####.#####.#####.#.#.#.### 
 #.....#.#.#.....#.....#...#.#.#..V                                                        #.#.#...#.#...#.#.#.#...#...#....d
 #####.#.#.###.#.###.###.#.#.#.#.#                                                         #.#.###.#.#####.#.#.#.#####.#.#.# 
L......#.......#.........#...#...#                                                        N....#.#.#.....#.#.#.....#.#.#.#.# 
 #.#.###.#########################                                                         #.###.#.###.###.#.#.#####.#####.# 
 #.#.#.#.#.......................#                                                         #.....................#.#.#...#.# 
 ###.#.#######.#########.###.#.#.#                                                         #.#.#.#.###.###.###.###.#.###.### 
Z..#.#.......#.#.#.....#.#.#.#.#..T                                                        #.#.#.#...#...#.#.#.#.......#...# 
 #.###.###.###.#.#######.#.#.#.#.#                                                         ###########.#####.#####.###.#.#.# 
M......#...#.#.......#...#...#.#.#                                                         #.#...#.#...#...........#.....#.# 
 #.#.###.###.#######.#############                                                         #.###.#.###.###########.#######.# 
 #.#.#.................#.#.#.#...#                                                        G..#.#.....#.#.#...#.#.#...#.#....V
 #######.###############.#.#.###.#                                                         #.#.#.#######.#.###.#.###.#.#.#.# 
 #.....#.#.....................#.#                                                         #...........................#.#.# 
 #.#.#.###.#.#.#####.###.###.#.#.#                                                         #.#.#.#####.#.#.###.###.#.#####.# 
N..#.#.....#.#.#.......#...#.#....C                                                        #.#.#...#...#.#...#.#...#.....#.# 
 #.###.#.#.#####.###.#########.#.#                                                         #.#####.#####.###########.###.#.# 
 #.#...#.#...#.....#...#.......#.#                                                         #.#.#.....#.#.#.#.#.....#...#.#.# 
 #.###.#.#.#.###.###.#######.#####                                                         #.#.#.#.###.#.#.#.#.#####.#.#.### 
 #.#...#.#.#...#.#.....#.#.......#    M         U       I       W   K   J       F     D    #.#...#.#...............#.#.#...# 
 #.#.###.#######.###.###.###.#########.#########.#######.#######.###.###.#######.#####.#########.#.#.#.###.#.###.#.######### 
 #.#.#.......#...#...#.#...#.#...#.#.#.#.........#.#.....#...#.....#.......#.#...#.#...........#.#.#.#...#.#...#.#.....#...# 
 #######.#######.#.#.#.###.###.###.#.#.###.###.###.#.#####.#.#.#.#######.###.###.#.#.#####.#######.#.#.###.#######.#.#.###.# 
 #...........#...#.#.#...#.....#.....#...#.#...#.....#.#.#.#.#.#.#.#.#...#.....#.#.#.....#.#.#.#.#.#.#...#...#.#...#.#.....# 
 #.#.#.#.#.#.###.#####.#######.###.#####.#.#######.#.#.#.#.#.###.#.#.###.#.###.#.#.###.#####.#.#.#####.#######.#.###.#.#.#.# 
 #.#.#.#.#.#.#.....#.....#.#.............#.#...#.#.#.....#.#.#...#.#...#.#.#...#...#...#...........#.......#...#.#.#.#.#.#.# 
 #.#####.#.###.#####.#.###.#.#.#######.###.###.#.#.#.#.###.#.#.###.#.###.#.#.###.#####.###.###########.#.#####.###.#.###.### 
 #.#.#...#.#...#.#.#.#.......#...#.......#.......#.#.#.#.#.#.#.......#...#.#...#...#.#.......#.....#.#.#.......#.......#...# 
 #.#.#.#.#.###.#.#.#######.#.#######.#.#.#####.#.#.#####.#.#.###.#######.#.###.#.#.#.#.###.#.#####.#.###.###.#####.###.#.#.# 
 #.#...#.#...#.#...........#.....#...#.#.#...#.#.#...#...#.#...#.#.......#.#.....#.#.....#.#...#.....#.....#.....#...#.#.#.# 
 #.#.###.#.###.#.#.#.#.#.###.###.#####.#.#.#.###.#.###.###.###.#.###.###.#.#########.#############.#######.###.#######.#.### 
 #.#...#.#.#...#.#.#.#.#.#.....#.....#.#.#.#.....#.......#.#.#.#.#.#.#...#.#...#.#.......................#...#.....#.#.#.#.# 
 #.###.###.#####.###.###.#######.#######.#.###########.###.#.#.#.#.###.#.#.#.#.#.###.#.###.###.###.#.###.#####.#.###.###.#.# 
 #.#...#.......#.#.....#...#.#.#.#.#.#.#.#.......#.......#.#.......#.#.#.#...#.....#.#...#...#.#...#...#.#.....#.#...#.....# 
 #.#####.###.###.###.#.#####.#.#.#.#.#.#.###.#.#.#.#######.#####.###.###.###.###.#####.###########.#####.#.#####.###.#####.# 
 #...#.....#...#.#...#.#.....#.#.#.#.#.#.#.#.#.#.#.#.#.......#.....#.#...#...#.#.#.....#.#.#.#.#.......#.#.#...#.......#...# 
 #.#.###.#######.#.#.###.###.#.###.#.#.#.#.#####.#.#.#####.#.#.###.#.#.#.#####.#.###.#.#.#.#.#.###.#####.#.###.#####.#####.# 
 #.#.#...#.......#.#.#...#.....#...#.......#.....#.....#...#.#...#...#.#.....#.#.#.#.#.....#.#.#.#.#.#.#.#.#...#.#.......#.# 
 #.###.#.#.#####.###.#######.#####.#.###.#.###.#####.#####.#############.#.###.#.#.###.#####.#.#.###.#.#######.#.########### 
 #...#.#.#...#...#...#.#.....#.........#.#.#.#.....#.....#...#...#.......#.#...#.#...#...........#.....#...#...........#.#.# 
 #.###.###.###########.#####.###.###.#.#####.###.###.###.#.###.#######.#.#####.#.#.###.#.#.#.#####.#####.###.#######.###.#.# 
 #.#.#...#.#.#...#.#.#...#.#.......#.#...#.......#.#...#.#.#.....#...#.#.#...........#.#.#.#.........#.#...#.......#.#.#...# 
 #.#.#.#####.###.#.#.###.#.#.###.###.###.#####.###.#.#.###.#.#.#####.#.###.#.###.#####.#######.#.###.#.###.#.###.#####.#.#.# 
 #...#.#...#...#.#.#...#.....#.#.#...#.......#...#.#.#.#.....#.#.#...#.#.#.#.#.....#.........#.#...#...........#.....#...#.# 
 #.#####.#####.#.#.#.###.#.###.#####.#.#######.#.#.#.#.#######.#.#.#.#.#.#.#########.###.#######.#####.#####.#.#.#####.##### 
 #.....#.................#.#.....#...#...#.#.#.#.#...#.#.....#...#.#.....#.#...#.#.#...#.......#.....#...#.#.#.#...........# 
 #.#####.###.###.#####.###.#####.#.#.###.#.#.###.#.#####.#.#.#.###.###.###.###.#.#.#.###########.#.#######.#####.#.#.###.### 
 #.#.#.....#.#...#...#.#.#.#.......#.#.#.#.......#.....#.#.#.#...#...#.#.........#.....#.......#.#.............#.#.#...#...# 
 #.#.#.#####.#######.###.#########.###.#.#.#########.#####.#.#.###.#.#####.#####.#.#.#####.#######.###.#.#.#####.#.#.###.### 
 #.#.....#.....#...#.#.........#.#.#.#.#.#.....#...#.#.#.#.#.....#.#.#.#.#.#...#.#.#.#.#.......#...#...#.#.....#.#.#...#...# 
 #####.#.#.#.###.###.###.#####.#.###.#.#.#.###.#.###.#.#.#.#########.#.#.###.#.#.#.###.#.###.#.#######.#########.#.#.#.#.### 
 #.....#.#.#.#...............#...........#...#.....#.....#...#...........#...#...#.......#...#.......#.........#.#.#.#.#...# 
 ###################################.#########.#########.###.#####.#.#####.###########.##################################### 
                                    b         W         U   S     a X     T           Y                                      
"""
        |> Advent.removeNewlinesAtEnds


main : Program () ( Output1, Output2 ) Never
main =
    Advent.program
        { input = input_
        , parse1 = parse1
        , parse2 = parse2
        , compute1 = compute1
        , compute2 = compute2
        , tests1 = tests1
        , tests2 = tests2
        }
